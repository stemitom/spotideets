# Generated by Django 3.2.10 on 2023-09-28 15:07

import apps.spotify.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('popularity', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('img_url', models.URLField()),
                ('albums', models.ManyToManyField(related_name='tracks', to='spotify.Album')),
                ('artists', models.ManyToManyField(related_name='tracks', to='spotify.Artist')),
                ('genres', models.ManyToManyField(related_name='tracks', to='spotify.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_artists', models.ManyToManyField(related_name='favorited_by', to='spotify.Artist')),
                ('favorite_genres', models.ManyToManyField(related_name='favorited_by', to='spotify.Genre')),
                ('favorite_tracks', models.ManyToManyField(related_name='favorited_by', to='spotify.Track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopTracks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_frame', enumfields.fields.EnumField(enum=apps.spotify.models.TimeFrame, max_length=50)),
                ('order', models.IntegerField(default=1)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopGenres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_frame', enumfields.fields.EnumField(enum=apps.spotify.models.TimeFrame, max_length=50)),
                ('order', models.IntegerField(default=1)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.genre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopArtists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_frame', enumfields.fields.EnumField(enum=apps.spotify.models.TimeFrame, max_length=50)),
                ('order', models.IntegerField(default=1)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpotifyToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=1000)),
                ('refresh_token', models.CharField(max_length=1000)),
                ('token_type', models.CharField(max_length=100)),
                ('expires_in', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='spotify.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='genres',
            field=models.ManyToManyField(to='spotify.Genre'),
        ),
        migrations.AddField(
            model_name='artist',
            name='top_albums',
            field=models.ManyToManyField(related_name='top_artists', to='spotify.Album'),
        ),
        migrations.AddField(
            model_name='artist',
            name='top_listeners',
            field=models.ManyToManyField(related_name='top_artists', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artist',
            name='top_tracks',
            field=models.ManyToManyField(related_name='top_artists', to='spotify.Track'),
        ),
    ]
